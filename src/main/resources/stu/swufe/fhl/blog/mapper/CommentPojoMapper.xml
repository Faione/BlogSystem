<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stu.swufe.fhl.blog.dao.CommentPojoMapper">
  <resultMap id="BaseResultMap" type="stu.swufe.fhl.blog.model.pojo.CommentPojo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="stu.swufe.fhl.blog.model.pojo.CommentPojoWithBLOBs">
    <result column="parent_content" jdbcType="LONGVARCHAR" property="parentContent" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, article_id, user_id, user_avatar, user_name, state, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    parent_content, content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="stu.swufe.fhl.blog.model.pojo.CommentPojoWithBLOBs">
    insert into tb_comment (id, article_id, user_id, 
      user_avatar, user_name, state, 
      create_time, update_time, parent_content, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{parentContent,jdbcType=LONGVARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="stu.swufe.fhl.blog.model.pojo.CommentPojoWithBLOBs">
    insert into tb_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="parentContent != null">
        parent_content,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentContent != null">
        #{parentContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="stu.swufe.fhl.blog.model.pojo.CommentPojoWithBLOBs">
    update tb_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentContent != null">
        parent_content = #{parentContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="stu.swufe.fhl.blog.model.pojo.CommentPojoWithBLOBs">
    update tb_comment
    set article_id = #{articleId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      parent_content = #{parentContent,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="stu.swufe.fhl.blog.model.pojo.CommentPojo">
    update tb_comment
    set article_id = #{articleId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>